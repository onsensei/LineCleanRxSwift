//
//  PostViewControllerTests.swift
//  LinePreTest
//
//  Created by Thanaphat Suwannikornkul on 01/01/63 BE.
//  Copyright (c) 2563 Thanaphat Suwannikornkul. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import LinePreTest
import XCTest

class PostViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: PostViewController!
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupPostViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupPostViewController()
  {
    let bundle = Bundle.main
    let storyboard = UIStoryboard(name: "Main", bundle: bundle)
    sut = (storyboard.instantiateViewController(withIdentifier: "PostViewController") as! PostViewController)
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class PostBusinessLogicSpy: PostBusinessLogic, PostDataStore
  {
    var postAlbum: PostAlbum = PostAlbum(title: "Post Test Title", photos: [
      PostPhoto(title: "Post Photo Title 00", url: "", thumbnail: ""),
      PostPhoto(title: "Post Photo Title 01", url: "", thumbnail: "")
    ])
    
    var requestSelectedPostAlbumCalled = false
    var requestPhotosViewerCalled = false
    
    func requestSelectedPostAlbum(request: Post.SelectedPostAlbum.Request) {
      requestSelectedPostAlbumCalled = true
    }
    
    func requestPhotosViewer(request: Post.PhotosViewer.Request) {
      requestPhotosViewerCalled = true
    }
  }
  
  // MARK: Tests
  
  func testShouldRequestSelectedPostAlbumWhenViewDidLoad()
  {
    // Given
    let spy = PostBusinessLogicSpy()
    sut.interactor = spy
    
    // When
    loadView()
    
    // Then
    XCTAssertTrue(spy.requestSelectedPostAlbumCalled, "viewDidLoad() should ask the interactor to requestSelectedPostAlbum")
  }
  
  func testDisplaySelectedPostAlbum()
  {
    // Given
    let viewModel = Post.SelectedPostAlbum.ViewModel()
    
    // When
    loadView()
    sut.displaySelectedPostAlbum(viewModel: viewModel)
    
    // Then
    XCTAssertEqual(sut.postTableView.numberOfSections, 2, "displaySelectedPostAlbum(viewModel:) should made postTableView to have 2 sections")
    XCTAssertEqual(sut.postTableView.numberOfRows(inSection: 0), 1, "displaySelectedPostAlbum(viewModel:) should made postTableView to have 1 rows in section 0")
//    XCTAssertEqual(sut.postTableView.numberOfRows(inSection: 1), 2, "displaySelectedPostAlbum(viewModel:) should made postTableView to have 2 rows in section 1")
  }
}
