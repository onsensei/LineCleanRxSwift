//
//  PostInteractorTests.swift
//  LinePreTest
//
//  Created by Thanaphat Suwannikornkul on 01/01/63 BE.
//  Copyright (c) 2563 Thanaphat Suwannikornkul. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import LinePreTest
import XCTest

class PostInteractorTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: PostInteractor!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupPostInteractor()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupPostInteractor()
  {
    sut = PostInteractor()
  }
  
  // MARK: Test doubles
  
  class PostPresentationLogicSpy: PostPresentationLogic
  {
    var presentSelectedPostAlbumCalled = false
    var presentPhotosViewerCalled = false

    func presentSelectedPostAlbum(response: Post.SelectedPostAlbum.Response)
    {
      presentSelectedPostAlbumCalled = true
    }
    
    func presentPhotosViewer(response: Post.PhotosViewer.Response)
    {
      presentPhotosViewerCalled = true
    }
  }
  
  // MARK: Tests
  
  func testRequestSelectedPostAlbum()
  {
    // Given
    let spy = PostPresentationLogicSpy()
    sut.presenter = spy
    let request = Post.SelectedPostAlbum.Request()
    
    // When
    sut.requestSelectedPostAlbum(request: request)
    
    // Then
    XCTAssertTrue(spy.presentSelectedPostAlbumCalled, "requestSelectedPostAlbum(request:) should ask the presenter to format the result")
  }
  
  func testRequestPhotosViewer()
  {
    // Given
    let spy = PostPresentationLogicSpy()
    sut.presenter = spy
    sut.postAlbum = PostAlbum(title: "Post Test Title", photos: [
      PostPhoto(title: "Post Photo Title 00", url: "", thumbnail: ""),
      PostPhoto(title: "Post Photo Title 01", url: "", thumbnail: "")
    ])
    let request = Post.PhotosViewer.Request(startIndex: 1)
    
    // When
    sut.requestPhotosViewer(request: request)
    
    // Then
    XCTAssertTrue(spy.presentPhotosViewerCalled, "requestPhotosViewer(request:) should ask the presenter to format the result")
  }
}
