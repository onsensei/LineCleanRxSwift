//
//  TimelineInteractor.swift
//  LinePreTest
//
//  Created by Thanaphat Suwannikornkul on 28/12/62 BE.
//  Copyright (c) 2562 Thanaphat Suwannikornkul. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

protocol TimelineBusinessLogic
{
  func fetchNewsFeed(request: Timeline.NewsFeed.Request)
}

protocol TimelineDataStore
{
  //!!!
  //var name: String { get set }
}

class TimelineInteractor: TimelineBusinessLogic, TimelineDataStore
{
  var presenter: TimelinePresentationLogic?
  var worker: TimelineWorker?
  //!!!
  //var name: String = ""
  
  // MARK: Do something
  
  func fetchNewsFeed(request: Timeline.NewsFeed.Request)
  {
    //!!!
//    worker = TimelineWorker()
//    worker?.doSomeWork()
    
    let headers = [
      "Authorization" : "Bearer \(request.token)"
    ]
    Alamofire.request("https://gorest.co.in/public-api/albums", method: .get, headers: headers)
      .responseJSON { response in
        //to get status code
        if let status = response.response?.statusCode {
          switch(status){
          case 200:
            //to get JSON return value
            if let jsonResult = response.result.value {
              do {
                let jsonData = try JSONSerialization.data(withJSONObject: jsonResult, options: .prettyPrinted)
                let jsonString = String(data: jsonData, encoding: .utf8)
                let data = jsonString?.data(using: .utf8)
                let jsonDecoder = JSONDecoder()
                let responseAlbum = try jsonDecoder.decode(ResponseAlbum.self, from: data!)
                
                let response = Timeline.NewsFeed.Response(content:responseAlbum)
                self.presenter?.presentNewsFeed(response: response)
              } catch {
                print("!!! json parser error: \(error)")
              }
            } else {
              print("!!! not found json body")
            }
          default:
            print("!!! error with response status: \(status)")
          }
        } else {
          print("!!! not found status code")
        }
    }
  }
}
