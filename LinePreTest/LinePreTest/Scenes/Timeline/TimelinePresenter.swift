//
//  TimelinePresenter.swift
//  LinePreTest
//
//  Created by Thanaphat Suwannikornkul on 28/12/62 BE.
//  Copyright (c) 2562 Thanaphat Suwannikornkul. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TimelinePresentationLogic
{
  func presentNewsFeed(response: Timeline.NewsFeed.Response)
  func presentFilteredNewsFeed(response: Timeline.FilteredNewsFeed.Response)
}

class TimelinePresenter: TimelinePresentationLogic
{
  weak var viewController: TimelineDisplayLogic?
  
  // MARK: Do something
  
  let MAX_PHOTOS:Int = 3
  
  func getPostAlbumsWith(resultAlbums: [ResultAlbum], albumPhotosDict: [String:ResponsePhoto]) -> [PostAlbum] {
    var postAlbums:[PostAlbum] = []
    resultAlbums.forEach { (element) in
      let title = element.title
      
      let responsePhoto = albumPhotosDict[element.id]
      var photos:[PostPhoto] = []
      if responsePhoto != nil {
        for item in responsePhoto!.result {
          let photo = PostPhoto(title: item.title, url: item.url, thumbnail: item.thumbnail)
          photos.append(photo)
          
          if photos.count >= MAX_PHOTOS {
            break
          }
        }
      }
      
      let postAlbum = PostAlbum(title: title, photos: photos)
      postAlbums.append(postAlbum)
    }
    
    return postAlbums
  }
  
  func presentNewsFeed(response: Timeline.NewsFeed.Response)
  {
    let posts:[PostAlbum] = getPostAlbumsWith(resultAlbums: response.resultAlbums, albumPhotosDict: response.albumPhotosDict)
    
    let viewModel = Timeline.NewsFeed.ViewModel(postAlbums: posts)
    viewController?.displayTimelineNewsFeed(viewModel: viewModel)
  }
  
  func presentFilteredNewsFeed(response: Timeline.FilteredNewsFeed.Response) {
    let posts:[PostAlbum] = getPostAlbumsWith(resultAlbums: response.resultAlbums, albumPhotosDict: response.albumPhotosDict)
    
    let viewModel = Timeline.FilteredNewsFeed.ViewModel(postAlbums: posts)
    viewController?.displayFilteredNewsFeed(viewModel: viewModel)
  }
}
