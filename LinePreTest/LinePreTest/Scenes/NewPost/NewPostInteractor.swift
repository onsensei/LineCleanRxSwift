//
//  NewPostInteractor.swift
//  LinePreTest
//
//  Created by Thanaphat Suwannikornkul on 29/12/62 BE.
//  Copyright (c) 2562 Thanaphat Suwannikornkul. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewPostBusinessLogic
{
  func requestAlertAddPhoto(request: NewPost.AlertAddPhoto.Request)
  func requestPickPhoto(request: NewPost.PickPhoto.Request)
  func requestAddPhoto(request: NewPost.AddPhoto.Request)
  
  func requestAlertRemovePhoto(request: NewPost.AlertRemovePhoto.Request)
  func requestRemovePhoto(request: NewPost.RemovePhoto.Request)
}

protocol NewPostDataStore
{
  var attachedPhotos: [UIImage] { get set }
}

class NewPostInteractor: NewPostBusinessLogic, NewPostDataStore
{
  var presenter: NewPostPresentationLogic?
  var worker: NewPostWorker?
  
  var attachedPhotos: [UIImage] = []
  
  // MARK: Do something
  
  func requestAlertAddPhoto(request: NewPost.AlertAddPhoto.Request) {
    let response = NewPost.AlertAddPhoto.Response()
    presenter!.presentAlertAddPhoto(response: response)
  }
  
  func requestPickPhoto(request: NewPost.PickPhoto.Request) {
    let response = NewPost.PickPhoto.Response(imageSourceType: request.imageSourceType)
    presenter!.presentPickPhoto(response: response)
  }
  
  func requestAddPhoto(request: NewPost.AddPhoto.Request) {
    attachedPhotos.append(request.selectedImage)
    
    let response = NewPost.AddPhoto.Response()
    presenter!.presentAddPhoto(response: response)
  }
  
  func requestAlertRemovePhoto(request: NewPost.AlertRemovePhoto.Request) {
    let response = NewPost.AlertRemovePhoto.Response(photoIndex: request.photoIndex)
    presenter!.presentAlertRemovePhoto(response: response)
  }
  
  func requestRemovePhoto(request: NewPost.RemovePhoto.Request) {
    attachedPhotos.remove(at: request.photoIndex)
    
    let response = NewPost.RemovePhoto.Response()
    presenter!.presentRemovePhoto(response: response)
  }
}
